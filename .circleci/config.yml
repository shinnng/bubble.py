version: 2.1

parameters:
  bub_version:
    # update default value when updating bub integration test fixture
    default: "v1.11.5"
    type: string
  pybub_version:
    # update default value when updating bub integration test fixture
    default: "3.12.0"
    type: string
  go_version:
    default: "1.20.2"
    type: string

common: &common
  working_directory: ~/repo
  steps:
    - checkout
    - restore_cache:
        keys:
          - cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: checkout ethpm-spec submodule
        command: git submodule update --init --recursive
    - run:
        name: install dependencies
        command: |
          python -m pip install --upgrade pip
          python -m pip install tox
    - run:
        name: run tox
        command: python -m tox -r
    - save_cache:
        paths:
          - .tox
          - ~/.cache/pip
          - ~/.local
          - ./eggs
          - ~/.ethash
          - ~/.py-bub
        key: cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
  resource_class: xlarge

docs_steps: &docs_steps
  working_directory: ~/repo
  steps:
    - checkout
    - restore_cache:
        keys:
          - cache-docs-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: checkout ethpm-spec submodule
        command: git submodule update --init --recursive
    - run:
        name: install dependencies
        command: |
          python -m pip install --upgrade pip
          python -m pip install tox
    - run:
        name: install bubble
        command: pip install -U bubble
    - run:
        name: run tox
        command: python -m tox -r
    - save_cache:
        paths:
          - .tox
          - ~/.cache/pip
          - ~/.local
          - ./eggs
          - ~/.ethash
          - ~/.py-bub
        key: cache-docs-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
  resource_class: xlarge

bub_steps: &bub_steps
  working_directory: ~/repo
  resource_class: xlarge
  steps:
    - checkout
    - restore_cache:
        keys:
          - cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: install dependencies
        command: |
          python -m pip install --upgrade pip
          python -m pip install tox
    - run:
        name: build bub if missing
        command: |
          mkdir -p $HOME/.ethash
          pip install --user "py-bub>=<< pipeline.parameters.pybub_version >>"
          export GOROOT=/usr/local/go
          echo << pipeline.parameters.bub_version >>
          export BUB_BINARY="$HOME/.py-bub/bub-<< pipeline.parameters.bub_version >>/bin/bub"
          if [ ! -e "$BUB_BINARY" ]; then
            curl -O https://storage.googleapis.com/golang/go<< pipeline.parameters.go_version >>.linux-amd64.tar.gz
            tar xvf go<< pipeline.parameters.go_version >>.linux-amd64.tar.gz
            sudo chown -R root:root ./go
            sudo mv go /usr/local
            sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
            sudo apt-get update;
            sudo apt-get install -y build-essential;
            python -m bub.install << pipeline.parameters.bub_version >>;
          fi
          sudo ln -s /home/circleci/.py-bub/bub-<< pipeline.parameters.bub_version >>/bin/bub /usr/local/bin/bub
          bub version
          bub makedag 0 $HOME/.ethash
    - run:
        name: run tox
        command: python -m tox -r
    - save_cache:
        paths:
          - .tox
          - ~/.cache/pip
          - ~/.local
          - ./eggs
          - ~/.ethash
          - ~/.py-bub
        key: cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

bub_custom_steps: &bub_custom_steps
  working_directory: ~/repo
  steps:
    - checkout
    - restore_cache:
        keys:
          - cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: install dependencies
        command: |
          python -m pip install --upgrade pip
          python -m pip install tox
    - run:
        name: use a pre-built bub binary
        command: |
          mkdir -p $HOME/.ethash
          export GOROOT=/usr/local/go
          export BUB_BINARY="./custom_bub"
          echo 'export BUB_BINARY="./custom_bub"' >> $BASH_ENV
          curl -O https://storage.googleapis.com/golang/go<< pipeline.parameters.go_version >>.linux-amd64.tar.gz
          tar xvf go<< pipeline.parameters.go_version >>.linux-amd64.tar.gz
          sudo chown -R root:root ./go
          sudo mv go /usr/local
          sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
          sudo apt-get update;
          sudo apt-get install -y build-essential;
          ./custom_bub version
          ./custom_bub makedag 0 $HOME/.ethash
    - run:
        name: run tox
        command: python -m tox -r
    - save_cache:
        paths:
          - .tox
          - ~/.cache/pip
          - ~/.local
          - ./eggs
          - ~/.ethash
        key: cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

ethpm_steps: &ethpm_steps
  working_directory: ~/repo
  resource_class: xlarge
  steps:
    - checkout
    - restore_cache:
        keys:
          - ethpm-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: install ipfs
        command:
          wget https://dist.ipfs.io/go-ipfs/v0.7.0/go-ipfs_v0.7.0_linux-amd64.tar.gz &&
          tar xvfz go-ipfs_v0.7.0_linux-amd64.tar.gz &&
          sudo cp go-ipfs/ipfs /usr/local/bin &&
          ipfs init
    - run:
        name: start ipfs node in background
        command: ipfs daemon
        background: true
    - run:
        name: checkout ethpm-spec submodule
        command: git submodule update --init --recursive
    - run:
        name: install dependencies
        command: |
          python -m pip install --upgrade pip
          python -m pip install tox
    - run:
        name: run tox
        command: python -m tox -r
    - save_cache:
        paths:
          - .tox
          - ~/.cache/pip
          - ~/.local
        key: ethpm-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

orbs:
  win: circleci/windows@5.0.0

windows_steps: &windows_steps
  executor:
    name: win/default
    shell: bash.exe
  working_directory: C:\Users\circleci\project\web3py
  steps:
    - checkout
    - restore_cache:
        keys:
          - windows-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: checkout ethpm-spec submodule
        command: git submodule update --init --recursive
    - run:
        name: install dependencies
        command: |
          python -m pip install --upgrade pip
          python -m pip install tox
    - run:
        name: run tox
        command: python -m tox -r
    - save_cache:
        paths:
          - .tox
        key: windows-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}


jobs:
  docs:
    <<: *docs_steps
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: docs


  #
  # Python 3.7
  #
  py37-core:
    <<: *common
    docker:
      - image: cimg/python:3.7
    environment:
      TOXENV: py37-core

  py37-ens:
    <<: *common
    docker:
      - image: cimg/python:3.7
    environment:
      TOXENV: py37-ens

  py37-ethpm:
    <<: *ethpm_steps
    docker:
      - image: cimg/python:3.7
    environment:
      TOXENV: py37-ethpm
      # Please don't use this key for any shenanigans
      WEB3_INFURA_PROJECT_ID: $WEB3_INFURA_PROJECT_ID

  py37-integration-goethereum-ipc:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.7
    environment:
      TOXENV: py37-integration-goethereum-ipc

  py37-integration-goethereum-ipc_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.7
    environment:
      TOXENV: py37-integration-goethereum-ipc_flaky

  py37-integration-goethereum-http:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.7
    environment:
      TOXENV: py37-integration-goethereum-http

  py37-integration-goethereum-http_async:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.7
    environment:
      TOXENV: py37-integration-goethereum-http_async

  py37-integration-goethereum-http_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.7
    environment:
      TOXENV: py37-integration-goethereum-http_flaky

  py37-integration-goethereum-ws:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.7
    environment:
      TOXENV: py37-integration-goethereum-ws

  py37-integration-goethereum-ws_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.7
    environment:
      TOXENV: py37-integration-goethereum-ws_flaky

  py37-integration-ethtester-pyevm:
    <<: *common
    docker:
      - image: cimg/python:3.7
    environment:
      TOXENV: py37-integration-ethtester
      ETHEREUM_TESTER_CHAIN_BACKEND: bub_tester.backends.PyEVMBackend

  py37-wheel-cli:
    <<: *common
    docker:
      - image: cimg/python:3.7
    environment:
      TOXENV: py37-wheel-cli

  #
  # Python 3.8
  #
  py38-lint:
    <<: *common
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-lint

  py38-core:
    <<: *common
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-core

  py38-ens:
    <<: *common
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-ens

  py38-ethpm:
    <<: *ethpm_steps
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-ethpm
      # Please don't use this key for any shenanigans
      WEB3_INFURA_PROJECT_ID: $WEB3_INFURA_PROJECT_ID

  py38-integration-goethereum-ipc:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-integration-goethereum-ipc

  py38-integration-goethereum-ipc_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-integration-goethereum-ipc_flaky

  py38-integration-goethereum-http:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-integration-goethereum-http

  py38-integration-goethereum-http_async:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-integration-goethereum-http_async

  py38-integration-goethereum-http_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-integration-goethereum-http_flaky

  py38-integration-goethereum-ws:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-integration-goethereum-ws

  py38-integration-goethereum-ws_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-integration-goethereum-ws_flaky

  py38-integration-ethtester-pyevm:
    <<: *common
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-integration-ethtester
      ETHEREUM_TESTER_CHAIN_BACKEND: bub_tester.backends.PyEVMBackend

  py38-wheel-cli:
    <<: *common
    docker:
      - image: cimg/python:3.8
    environment:
      TOXENV: py38-wheel-cli

  #
  # Python 3.9
  #
  py39-lint:
    <<: *common
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: py39-lint

  py39-core:
    <<: *common
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: py39-core

  py39-ens:
    <<: *common
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: py39-ens

  py39-ethpm:
    <<: *ethpm_steps
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: py39-ethpm
      WEB3_INFURA_PROJECT_ID: $WEB3_INFURA_PROJECT_ID

  py39-integration-goethereum-ipc:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: py39-integration-goethereum-ipc

  py39-integration-goethereum-ipc_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: py39-integration-goethereum-ipc_flaky

  py39-integration-goethereum-http:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: py39-integration-goethereum-http

  py39-integration-goethereum-http_async:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: py39-integration-goethereum-http_async

  py39-integration-goethereum-http_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: py39-integration-goethereum-http_flaky

  py39-integration-goethereum-ws:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: py39-integration-goethereum-ws

  py39-integration-goethereum-ws_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: py39-integration-goethereum-ws_flaky

  py39-integration-ethtester-pyevm:
    <<: *common
    docker:
      - image: cimg/python:3.9
    environment:
      TOXENV: py39-integration-ethtester
      ETHEREUM_TESTER_CHAIN_BACKEND: bub_tester.backends.PyEVMBackend

  py39-wheel-cli:
    <<: *common
    docker:
      - image: cimg/python:3.9
        environment:
          TOXENV: py39-wheel-cli

  #
  # Python 3.10
  #
  py310-lint:
    <<: *common
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: py310-lint

  py310-core:
    <<: *common
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: py310-core

  py310-ens:
    <<: *common
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: py310-ens

  py310-ethpm:
    <<: *ethpm_steps
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: py310-ethpm
      WEB3_INFURA_PROJECT_ID: $WEB3_INFURA_PROJECT_ID

  py310-integration-goethereum-ipc:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: py310-integration-goethereum-ipc

  py310-integration-goethereum-ipc_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: py310-integration-goethereum-ipc_flaky

  py310-integration-goethereum-http:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: py310-integration-goethereum-http

  py310-integration-goethereum-http_async:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: py310-integration-goethereum-http_async

  py310-integration-goethereum-http_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: py310-integration-goethereum-http_flaky

  py310-integration-goethereum-ws:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: py310-integration-goethereum-ws

  py310-integration-goethereum-ws_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: py310-integration-goethereum-ws_flaky

  py310-integration-ethtester-pyevm:
    <<: *common
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: py310-integration-ethtester
      ETHEREUM_TESTER_CHAIN_BACKEND: bub_tester.backends.PyEVMBackend

  py310-wheel-cli:
    <<: *common
    docker:
      - image: cimg/python:3.10
        environment:
          TOXENV: py310-wheel-cli

  py311-wheel-cli-windows:
    <<: *windows_steps
    environment:
      TOXENV: py311-wheel-cli-windows

  #
  # Python 3.11
  #
  py311-lint:
    <<: *common
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: py311-lint

  py311-core:
    <<: *common
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: py311-core

  py311-ens:
    <<: *common
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: py311-ens

  py311-ethpm:
    <<: *ethpm_steps
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: py311-ethpm
      # Please don't use this key for any shenanigans
      WEB3_INFURA_PROJECT_ID: $WEB3_INFURA_PROJECT_ID

  py311-integration-goethereum-ipc:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: py311-integration-goethereum-ipc

  py311-integration-goethereum-ipc_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: py311-integration-goethereum-ipc_flaky

  py311-integration-goethereum-http:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: py311-integration-goethereum-http

  py311-integration-goethereum-http_async:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: py311-integration-goethereum-http_async

  py311-integration-goethereum-http_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: py311-integration-goethereum-http_flaky

  py311-integration-goethereum-ws:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: py311-integration-goethereum-ws

  py311-integration-goethereum-ws_flaky:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: py311-integration-goethereum-ws_flaky

  py311-integration-ethtester-pyevm:
    <<: *common
    docker:
      - image: cimg/python:3.11
    environment:
      TOXENV: py311-integration-ethtester
      ETHEREUM_TESTER_CHAIN_BACKEND: bub_tester.backends.PyEVMBackend

  py311-wheel-cli:
    <<: *common
    docker:
      - image: cimg/python:3.11
        environment:
          TOXENV: py311-wheel-cli

  benchmark:
    <<: *bub_steps
    docker:
      - image: cimg/python:3.10
    environment:
      TOXENV: benchmark

workflows:
  version: 2.1
  test:
    jobs:
      # These are the longest running tests, start them first
      - py37-core
      - py38-core
      - py39-core
      - py310-core
      - py311-core
      - docs
      - benchmark
      - py37-ens
      - py37-ethpm
      - py37-integration-goethereum-ipc
      - py37-integration-goethereum-ipc_flaky
      - py37-integration-goethereum-http
      - py37-integration-goethereum-http_async
      - py37-integration-goethereum-http_flaky
      - py37-integration-goethereum-ws
      - py37-integration-goethereum-ws_flaky
      - py37-integration-ethtester-pyevm
      - py37-wheel-cli
      - py38-lint
      - py38-ens
      - py38-ethpm
      - py38-integration-goethereum-ipc
      - py38-integration-goethereum-ipc_flaky
      - py38-integration-goethereum-http
      - py38-integration-goethereum-http_async
      - py38-integration-goethereum-http_flaky
      - py38-integration-goethereum-ws
      - py38-integration-goethereum-ws_flaky
      - py38-integration-ethtester-pyevm
      - py38-wheel-cli
      - py39-lint
      - py39-ens
      - py39-ethpm
      - py39-integration-goethereum-ipc
      - py39-integration-goethereum-ipc_flaky
      - py39-integration-goethereum-http
      - py39-integration-goethereum-http_async
      - py39-integration-goethereum-http_flaky
      - py39-integration-goethereum-ws
      - py39-integration-goethereum-ws_flaky
      - py39-integration-ethtester-pyevm
      - py39-wheel-cli
      - py310-lint
      - py310-ens
      - py310-ethpm
      - py310-integration-goethereum-ipc
      - py310-integration-goethereum-ipc_flaky
      - py310-integration-goethereum-http
      - py310-integration-goethereum-http_async
      - py310-integration-goethereum-http_flaky
      - py310-integration-goethereum-ws
      - py310-integration-goethereum-ws_flaky
      - py310-integration-ethtester-pyevm
      - py310-wheel-cli
      - py311-lint
      - py311-ens
      - py311-ethpm
      - py311-integration-goethereum-ipc
      - py311-integration-goethereum-ipc_flaky
      - py311-integration-goethereum-http
      - py311-integration-goethereum-http_async
      - py311-integration-goethereum-http_flaky
      - py311-integration-goethereum-ws
      - py311-integration-goethereum-ws_flaky
      - py311-integration-ethtester-pyevm
      - py311-wheel-cli
      - py311-wheel-cli-windows
